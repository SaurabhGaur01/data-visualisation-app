{"version":3,"sources":["ducks/features.js","constants/apiStatus.js","ducks/apiStatus.js","constants/filterOptions.js","ducks/filterBy.js","ducks/filteredFeatures.js","ducks/selectedMaterial.js","ducks/filteredMaterial.js","reducers/index.js","components/Content/BoatRamps/BoatRampsHeader.jsx","utils/transformedUtils.js","components/Content/BoatRamps/BoatRampsBody.jsx","thunks/handleMaterial.js","components/Content/BoatRamps/BoatRamps.jsx","constants/chart.js","components/Content/Filter/ConstructionMaterial.jsx","thunks/handleSelectedDataSet.js","thunks/handleReset.js","components/Content/Filter/Filter.jsx","thunks/handleGetData.js","components/App.jsx","index.js"],"names":["SET_FEATURES","CLEAR_FEATUREs","LOADING_ERROR","LOADING_IN_PROGRESS","LOADING_SUCCESS","SET_LOADING_IN_PROGRESS","SET_LOADING_SUCCESS","SET_LOADING_ERROR","FILTER_BY_CONSTRUCTION_MATERIAL","FILTER_BY_NONE","SET_FILTER_BY","setFilterBy","value","type","SET_FILTERED_FEATURES","CLEAR_FILTERED_FEATURES","setFilteredFeatures","data","SET_SELECTED_MATERIAL","SET_FILTERED_MATERIAL","CLEAR_FILTERED_MATERIAL","setFilteredMaterial","combineReducers","features","state","action","apiStatus","filterBy","filteredFeatures","selectedMaterial","filteredMaterial","headCells","id","label","BoatRampsHeader","TableHead","TableRow","map","TableCell","align","TableSortLabel","getTransformedResponse","transformedResponse","forEach","rowID","properties","material","area_","status","asset_numb","owner","push","area","assetNumb","getFirstRangeData","filter","getSecondRangeData","getThirdRangeData","getFilteredDataset","dataset","mapDispatchAsProps","actionHandleMaterial","dispatch","getState","filteredDataset","hocChain","compose","connect","rowsPerPage","page","TableBody","slice","row","hover","onClick","event","role","tabIndex","React","useState","setPage","setRowsPerPage","Paper","className","TableContainer","Table","aria-labelledby","size","aria-label","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","CHART_BACKGROUND_COLOR","CHART_OPTION","responsive","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","xAxes","barPercentage","actionHandleSelectedDataSet","showMatrix","labelMatrix","valueMatrix","title","constructionMaterialMatrix","obj","getConstructionMaterialMatrix","Object","entries","key","getAreaSizeMatrix","labels","datasets","backgroundColor","borderWidth","options","getElementAtEvent","element","_model","handleReset","actionSetFilterBy","actionHandleReset","name","onChange","handleGetData","a","axios","get","actionHandleGetData","useEffect","Card","variant","CardContent","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae677cfb.chunk.js","sourcesContent":["export const SET_FEATURES = 'modules/data-visualisation-app/SET_FEATURES';\r\nexport const CLEAR_FEATUREs = 'modules/data-visualisation-app/CLEAR_FEATUREs';\r\n\r\nexport const setFeatures = data => ({\r\n    type: SET_FEATURES,\r\n    data,\r\n});\r\n\r\nexport const clearFeatures = () => ({\r\n    type: CLEAR_FEATUREs,\r\n});\r\n\r\nexport const featuresReducer = (state = [], action = { type: 'NULL_ACTION'}) => {\r\n    switch (action.type){\r\n        case SET_FEATURES:\r\n            return action.data;\r\n        case CLEAR_FEATUREs:\r\n            return [];\r\n        default:\r\n            return state;               \r\n    }\r\n};","export const LOADING_ERROR = \"ERROR\";\r\nexport const LOADING_IN_PROGRESS = \"LOADING\";\r\nexport const LOADING_SUCCESS = \"SUCCESS\"; ","import { LOADING_ERROR, LOADING_IN_PROGRESS, LOADING_SUCCESS } from '../constants/apiStatus';\r\n\r\nexport const SET_LOADING_IN_PROGRESS = 'modules/data-visualisation-app/SET_LOADING_IN_PROGRESS';\r\nexport const SET_LOADING_SUCCESS = 'modules/data-visualisation-app/SET_LOADING_SUCCESS';\r\nexport const SET_LOADING_ERROR = 'modules/data-visualisation-app/SET_LOADING_ERROR';\r\n\r\nexport const setLoadingInProgress = () => ({\r\n    type: SET_LOADING_IN_PROGRESS,\r\n});\r\n\r\nexport const setLoadingSuccess = () => ({\r\n    type: SET_LOADING_SUCCESS,\r\n});\r\n\r\nexport const setLoadingError = () => ({\r\n    type: SET_LOADING_ERROR,\r\n});\r\n\r\nexport const apiStatusReducer = (state = '', action = { type: 'NULL_ACTION'}) => {\r\n    switch (action.type){\r\n        case SET_LOADING_ERROR:\r\n            return LOADING_ERROR;\r\n        case SET_LOADING_SUCCESS:\r\n            return LOADING_SUCCESS;\r\n        case SET_LOADING_IN_PROGRESS:\r\n            return LOADING_IN_PROGRESS;\r\n        default:\r\n            return state;               \r\n    }\r\n};","export const FILTER_BY_CONSTRUCTION_MATERIAL = 'construction';\r\n\r\nexport const FILTER_BY_SIZE_CATEGORY = 'category';\r\n\r\nexport const FILTER_BY_AREA_SIZE_50 = '[0, 50]';\r\n\r\nexport const FILTER_BY_AREA_SIZE_200 = '[50, 200]';\r\n\r\nexport const FILTER_BY_NONE = 'none';","import { FILTER_BY_CONSTRUCTION_MATERIAL } from '../constants/filterOptions';\r\n\r\nexport const SET_FILTER_BY = 'modules/data-visualisation-app/SET_FILTER_BY';\r\n\r\nexport const setFilterBy = value => ({\r\n    type: SET_FILTER_BY,\r\n    value,\r\n});\r\n\r\nexport const filterByReducer = (state = FILTER_BY_CONSTRUCTION_MATERIAL, action = { type: 'NULL_ACTION'}) => {\r\n    switch (action.type){\r\n        case SET_FILTER_BY:\r\n            return action.value;\r\n        default:\r\n            return state;               \r\n    }\r\n};","export const SET_FILTERED_FEATURES = 'modules/data-visualisation-app/SET_FILTERED_FEATURES';\r\nexport const CLEAR_FILTERED_FEATURES = 'modules/data-visualisation-app/CLEAR_FILTERED_FEATURES';\r\n\r\nexport const setFilteredFeatures = data => ({\r\n    type: SET_FILTERED_FEATURES,\r\n    data,\r\n});\r\n\r\nexport const clearFilteredFeatures = () => ({\r\n    type: CLEAR_FILTERED_FEATURES,\r\n});\r\n\r\nexport const filteredFeaturesReducer = (state = [], action = { type: 'NULL_ACTION'}) => {\r\n    switch (action.type){\r\n        case SET_FILTERED_FEATURES:\r\n            return action.data;\r\n        case CLEAR_FILTERED_FEATURES:\r\n            return [];\r\n        default:\r\n            return state;               \r\n    }\r\n};","export const SET_SELECTED_MATERIAL = 'modules/data-visualisation-app/SET_SELECTED_MATERIAL';\r\n\r\nexport const setSelectedMaterial = value => ({\r\n    type: SET_SELECTED_MATERIAL,\r\n    value,\r\n});\r\n\r\nexport const selectedMaterialReducer = (state = '', action = { type: 'NULL_ACTION'}) => {\r\n    switch (action.type){\r\n        case SET_SELECTED_MATERIAL:\r\n            return action.value;\r\n        default:\r\n            return state;               \r\n    }\r\n};","export const SET_FILTERED_MATERIAL = 'modules/data-visualisation-app/SET_FILTERED_MATERIAL';\r\nexport const CLEAR_FILTERED_MATERIAL = 'modules/data-visualisation-app/CLEAR_FILTERED_MATERIAL';\r\n\r\nexport const setFilteredMaterial = data => ({\r\n    type: SET_FILTERED_MATERIAL,\r\n    data,\r\n});\r\n\r\nexport const clearFilteredMaterial = () => ({\r\n    type: CLEAR_FILTERED_MATERIAL,\r\n});\r\n\r\nexport const filteredMaterialReducer = (state = [], action = { type: 'NULL_ACTION'}) => {\r\n    switch (action.type){\r\n        case SET_FILTERED_MATERIAL:\r\n            return action.data;\r\n        case CLEAR_FILTERED_MATERIAL:\r\n            return [];\r\n        default:\r\n            return state;               \r\n    }\r\n};","import { combineReducers } from 'redux';\r\nimport { featuresReducer as features } from '../ducks/features';\r\nimport { apiStatusReducer as apiStatus } from '../ducks/apiStatus';\r\nimport { filterByReducer as filterBy } from '../ducks/filterBy';\r\nimport { filteredFeaturesReducer as filteredFeatures } from '../ducks/filteredFeatures';\r\nimport { selectedMaterialReducer as selectedMaterial } from '../ducks/selectedMaterial';\r\nimport { filteredMaterialReducer as filteredMaterial } from '../ducks/filteredMaterial';\r\n\r\nexport default combineReducers({\r\n    features,\r\n    apiStatus,\r\n    filterBy,\r\n    filteredFeatures,\r\n    selectedMaterial,\r\n    filteredMaterial,\r\n});    ","import React from \"react\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\n\r\nconst headCells = [\r\n  { id: \"material\", label: \"Material\" },\r\n  { id: \"area\", label: \"Area\" },\r\n  { id: \"status\", label: \"Status\" },\r\n  { id: \"assetNumb\", label: \"Asset Number\" },\r\n  { id: \"owner\", label: \"Owner\" },\r\n];\r\n\r\nconst BoatRampsHeader = () => (\r\n  <TableHead>\r\n    <TableRow>\r\n      {headCells.map(({ id, label }) => (\r\n        <TableCell key={id} align=\"right\">\r\n          <TableSortLabel>{label}</TableSortLabel>\r\n        </TableCell>\r\n      ))}\r\n    </TableRow>\r\n  </TableHead>\r\n);\r\n\r\nexport default BoatRampsHeader;\r\n","import {\r\n  FILTER_BY_CONSTRUCTION_MATERIAL,\r\n  FILTER_BY_AREA_SIZE_50,\r\n  FILTER_BY_AREA_SIZE_200,\r\n} from \"../constants/filterOptions\";\r\n\r\nexport const getTransformedResponse = (features) => {\r\n  const transformedResponse = [];\r\n  features.forEach(({ id: rowID, properties }) => {\r\n    const { type, material, area_, status, asset_numb, owner } = properties;\r\n    transformedResponse.push({\r\n      rowID,\r\n      type,\r\n      material,\r\n      area: area_,\r\n      status,\r\n      assetNumb: asset_numb,\r\n      owner,\r\n    });\r\n  });\r\n  return transformedResponse;\r\n};\r\n\r\nexport const getConstructionMaterialMatrix = (data) => {\r\n  var constructionMaterialMatrix = {};\r\n  data.forEach((obj) => {\r\n    constructionMaterialMatrix[obj.material] =\r\n      (constructionMaterialMatrix[obj.material] || 0) + 1;\r\n  });\r\n  return constructionMaterialMatrix;\r\n};\r\n\r\nexport const getAreaSizeMatrix = (data) => {\r\n  return {\r\n    \"[0, 50]\": getFirstRangeData(data).length,\r\n    \"[50, 200]\": getSecondRangeData(data).length,\r\n    \"[200, 526]\": getThirdRangeData(data).length,\r\n  };\r\n};\r\n\r\nexport const getFirstRangeData = (data) =>\r\n  data.filter(({ area }) => area >= 0 && area <= 50);\r\n\r\nexport const getSecondRangeData = (data) =>\r\n  data.filter(({ area }) => area > 50 && area < 200);\r\n\r\nexport const getThirdRangeData = (data) =>\r\n  data.filter(({ area }) => area >= 200);\r\n\r\nexport const getFilteredDataset = (features, filterBy, dataset) => {\r\n  let filteredDataset = [];\r\n  if (filterBy === FILTER_BY_CONSTRUCTION_MATERIAL) {\r\n    filteredDataset = features.filter(({ material }) => material === dataset);\r\n  } else {\r\n    if (dataset === FILTER_BY_AREA_SIZE_50) {\r\n      filteredDataset = getFirstRangeData(features);\r\n    } else if (dataset === FILTER_BY_AREA_SIZE_200) {\r\n      filteredDataset = getSecondRangeData(features);\r\n    } else {\r\n      filteredDataset = getThirdRangeData(features);\r\n    }\r\n  }\r\n  return filteredDataset;\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport handleMaterial from \"../../../thunks/handleMaterial\";\r\n\r\nconst BoatRampsBody = ({\r\n  filteredFeatures,\r\n  actionHandleMaterial,\r\n  rowsPerPage,\r\n  page,\r\n}) => {\r\n  const handleClick = (event, name) => {\r\n    actionHandleMaterial(name.material);\r\n  };\r\n\r\n  return (\r\n    <TableBody>\r\n      {filteredFeatures\r\n        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n        .map((row) => (\r\n          <TableRow\r\n            hover\r\n            onClick={(event) => handleClick(event, row)}\r\n            role=\"checkbox\"\r\n            tabIndex={-1}\r\n            key={row.rowID}\r\n          >\r\n            <TableCell align=\"right\">{row.material}</TableCell>\r\n            <TableCell align=\"right\">{row.area}</TableCell>\r\n            <TableCell align=\"right\">{row.status}</TableCell>\r\n            <TableCell align=\"right\">{row.assetNumb}</TableCell>\r\n            <TableCell align=\"right\">{row.owner}</TableCell>\r\n          </TableRow>\r\n        ))}\r\n    </TableBody>\r\n  );\r\n};\r\n\r\nBoatRampsBody.propTypes = {\r\n  filteredFeatures: PropTypes.arrayOf(PropTypes.shape({})),\r\n  actionHandleMaterial: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport const mapStateToProps = (state) => ({\r\n  filteredFeatures: state.filteredFeatures,\r\n});\r\n\r\nconst mapDispatchAsProps = {\r\n  actionHandleMaterial: handleMaterial,\r\n};\r\n\r\nconst hocChain = compose(\r\n    connect(mapStateToProps, mapDispatchAsProps)\r\n);\r\n\r\nexport { BoatRampsBody as TestableBoatRampsBody };\r\n\r\nexport default hocChain(BoatRampsBody);\r\n","import { setFilteredMaterial } from '../ducks/filteredMaterial';\r\nimport { getFilteredDataset } from '../utils/transformedUtils';\r\n\r\nconst handleMaterial = dataset => (dispatch, getState) => {\r\n    const { features, filterBy } = getState();\r\n    const filteredDataset = getFilteredDataset(features, filterBy, dataset);\r\n    dispatch(setFilteredMaterial(filteredDataset));\r\n}\r\n\r\nexport default handleMaterial;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport BoatRampsHeader from \"./BoatRampsHeader\";\r\nimport BoatRampsBody from \"./BoatRampsBody\";\r\n\r\nconst BoatRamps = ({ filteredFeatures }) => {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className=\"mt-3\">\r\n      <TableContainer>\r\n        <Table\r\n          className=\"table-content\"\r\n          aria-labelledby=\"tableTitle\"\r\n          size=\"small\"\r\n          aria-label=\"enhanced table\"\r\n        >\r\n          <BoatRampsHeader />\r\n          <BoatRampsBody page={page} rowsPerPage={rowsPerPage} />\r\n        </Table>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25]}\r\n          component=\"div\"\r\n          count={filteredFeatures.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </TableContainer>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nBoatRamps.propTypes = {\r\n  filteredFeatures: PropTypes.arrayOf(PropTypes.shape({})),\r\n};\r\n\r\nexport const mapStateToProps = (state) => ({\r\n  filteredFeatures: state.filteredFeatures,\r\n});\r\n\r\nconst hocChain = compose(\r\n    connect(mapStateToProps)\r\n);\r\n\r\nexport { BoatRamps as TestableBoatRamps };\r\n\r\nexport default hocChain(BoatRamps);\r\n","export const CHART_BACKGROUND_COLOR = [\r\n    'rgba(255, 99, 132)',\r\n    'rgba(54, 162, 235)',\r\n    'rgba(255, 206, 86)',\r\n    'rgba(75, 192, 192)',\r\n    'rgba(153, 102, 255)',\r\n    'rgba(255, 159, 64)',\r\n];\r\n\r\nexport const CHART_OPTION = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n        yAxes: [{\r\n            ticks: {\r\n                beginAtZero:true\r\n            }\r\n        }],\r\n        xAxes: [{\r\n            barPercentage: 0.4\r\n        }]\r\n    }\r\n};\r\n\r\nexport const CONSTRUCTION_MATERIAL_TITLE = '# of Ramps per construction material';\r\n\r\nexport const CATEGORY_TITLE = '# of Ramps per size category';","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { getConstructionMaterialMatrix, getAreaSizeMatrix } from '../../../utils/transformedUtils';\r\nimport { FILTER_BY_CONSTRUCTION_MATERIAL } from '../../../constants/filterOptions';\r\nimport {\r\n    CHART_BACKGROUND_COLOR,\r\n    CHART_OPTION,\r\n    CONSTRUCTION_MATERIAL_TITLE,\r\n    CATEGORY_TITLE,\r\n} from '../../../constants/chart';\r\nimport handleSelectedDataSet from '../../../thunks/handleSelectedDataSet';\r\n\r\nconst ConstructionMaterial = ({\r\n    filteredMaterial,\r\n    filterBy,\r\n    actionHandleSelectedDataSet,\r\n}) => {\r\n    var showMatrix = [];\r\n    var labelMatrix = [];\r\n    var valueMatrix = [];\r\n    var title = '';\r\n    if(filterBy === FILTER_BY_CONSTRUCTION_MATERIAL) {\r\n        showMatrix = getConstructionMaterialMatrix(filteredMaterial);\r\n        Object.entries(showMatrix).forEach(([key, value]) => {\r\n            labelMatrix.push(key);\r\n            valueMatrix.push(value);\r\n        })\r\n        title = CONSTRUCTION_MATERIAL_TITLE;\r\n    } else {\r\n        showMatrix = getAreaSizeMatrix(filteredMaterial);\r\n        Object.entries(showMatrix).forEach(([key, value]) => {\r\n            labelMatrix.push(key);\r\n            valueMatrix.push(value);\r\n        })\r\n        title = CATEGORY_TITLE;\r\n    }\r\n\r\n    const data = {\r\n      labels: labelMatrix,\r\n      datasets: [\r\n        {\r\n            label: title,\r\n            data: valueMatrix,\r\n            backgroundColor: CHART_BACKGROUND_COLOR,\r\n            borderWidth: 2,  \r\n        },\r\n      ],\r\n    }\r\n  \r\n    const getElementAtEvent = element => {\r\n        if (!element.length) return;\r\n        const { _model: { label } } = element[0];\r\n        actionHandleSelectedDataSet(label);\r\n    };\r\n\r\n    return (\r\n        <div className=\"chart-container\">\r\n          <Bar \r\n            data={data} \r\n            options={CHART_OPTION} \r\n            getElementAtEvent={getElementAtEvent}\r\n          />\r\n        </div>\r\n    );\r\n}\r\n\r\nConstructionMaterial.propTypes = {\r\n    filterBy: PropTypes.string.isRequired,\r\n    filteredMaterial: PropTypes.arrayOf(PropTypes.shape({})),\r\n    actionHandleSelectedDataSet: PropTypes.func.isRequired,\r\n};\r\n  \r\nexport const mapStateToProps = state => ({\r\n    filterBy: state.filterBy,\r\n    filteredMaterial: state.filteredMaterial,\r\n});\r\n\r\nconst mapDispatchAsProps = {\r\n    actionHandleSelectedDataSet: handleSelectedDataSet,\r\n}\r\n\r\nconst hocChain = compose(\r\n    connect(mapStateToProps, mapDispatchAsProps),\r\n);\r\n\r\nexport { ConstructionMaterial as TestableConstructionMaterial };\r\n\r\nexport default hocChain(ConstructionMaterial);","import { setFilteredFeatures } from '../ducks/filteredFeatures';\r\nimport { getFilteredDataset } from '../utils/transformedUtils';\r\n\r\nconst handleSelectedDataSet = dataset => (dispatch, getState) => {\r\n    const { features, filterBy } = getState();\r\n    const filteredDataset = getFilteredDataset(features, filterBy, dataset);\r\n    dispatch(setFilteredFeatures(filteredDataset));\r\n}\r\n\r\nexport default handleSelectedDataSet;","import { setFilteredMaterial } from '../ducks/filteredMaterial';\r\nimport { setFilteredFeatures } from '../ducks/filteredFeatures';\r\nimport { setFilterBy } from '../ducks/filterBy';\r\nimport { FILTER_BY_CONSTRUCTION_MATERIAL } from '../constants/filterOptions';\r\n\r\nconst handleReset = () => (dispatch, getState) => {\r\n    const { features } = getState();\r\n    dispatch(setFilteredMaterial(features));\r\n    dispatch(setFilteredFeatures(features));\r\n    dispatch(setFilterBy(FILTER_BY_CONSTRUCTION_MATERIAL));\r\n}\r\n\r\nexport default handleReset;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { setFilterBy } from \"../../../ducks/filterBy\";\r\nimport {\r\n  FILTER_BY_CONSTRUCTION_MATERIAL,\r\n  FILTER_BY_SIZE_CATEGORY,\r\n  FILTER_BY_NONE,\r\n} from \"../../../constants/filterOptions\";\r\nimport handleReset from \"../../../thunks/handleReset\";\r\n\r\nconst Filter = ({ actionSetFilterBy, actionHandleReset, filterBy }) => {\r\n  const changeFilter = (event) => {\r\n    actionSetFilterBy(event.target.value);\r\n    if (event.target.value === FILTER_BY_NONE) {\r\n      actionHandleReset();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"filter-by mr-5\">\r\n      <span className=\"filter-heading pr-2\">Filter By</span>\r\n      <select\r\n        id=\"filter-by\"\r\n        name=\"filter-by\"\r\n        className=\"input\"\r\n        onChange={changeFilter}\r\n        value={filterBy}\r\n      >\r\n        <option value={FILTER_BY_CONSTRUCTION_MATERIAL}>Material</option>\r\n        <option value={FILTER_BY_SIZE_CATEGORY}>Size</option>\r\n        <option value={FILTER_BY_NONE}>None</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  actionSetFilterBy: PropTypes.func.isRequired,\r\n  actionHandleReset: PropTypes.func.isRequired,\r\n  filterBy: PropTypes.string.isRequired,\r\n};\r\n\r\nexport const mapStateToProps = (state) => ({\r\n  filterBy: state.filterBy,\r\n});\r\n\r\nconst mapDispatchAsProps = {\r\n  actionSetFilterBy: setFilterBy,\r\n  actionHandleReset: handleReset,\r\n};\r\n\r\nconst hocChain = compose(\r\n  connect(mapStateToProps, mapDispatchAsProps)\r\n);\r\n\r\nexport { Filter as TestableFilter };\r\n\r\nexport default hocChain(Filter);\r\n","import axios from 'axios';\r\nimport { setFeatures } from '../ducks/features';\r\nimport { setFilteredFeatures } from '../ducks/filteredFeatures';\r\nimport { setFilteredMaterial } from '../ducks/filteredMaterial';\r\nimport { setLoadingError, setLoadingInProgress, setLoadingSuccess } from '../ducks/apiStatus';\r\nimport { getTransformedResponse } from '../utils/transformedUtils';\r\n\r\nconst handleGetData = () => async (dispatch) => {\r\n    dispatch(setLoadingInProgress());\r\n    try {\r\n        const { data: { features }} = await axios.get('./boat_ramps.geojson');\r\n        const transformedResponse = getTransformedResponse(features);\r\n        dispatch(setFeatures(transformedResponse));\r\n        dispatch(setFilteredFeatures(transformedResponse));\r\n        dispatch(setFilteredMaterial(transformedResponse));\r\n        dispatch(setLoadingSuccess());\r\n    } catch (error) {\r\n        // handling errors gracefully if any api fails so that UI will remain clean for endusers\r\n        // can also be used to log/report if any api fails\r\n        dispatch(setLoadingError());\r\n    }\r\n}\r\n\r\nexport default handleGetData;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport BoatRamps from './Content/BoatRamps/BoatRamps';\nimport ConstructionMaterial from './Content/Filter/ConstructionMaterial';\nimport Filter from './Content/Filter/Filter';\nimport handleGetData from '../thunks/handleGetData';\nimport './App.css';\n\nconst App = ({\n  actionHandleGetData,\n}) =>{\n  /* \n    Below action will be dispatched before component renders and make an API call,\n    store the response in redux store\n    */\n    React.useEffect(() => {\n      actionHandleGetData();\n  }, [actionHandleGetData]);\n\n  return (\n    <div className=\"dashboard-content\">\n      <h5 className=\"text-center\">\n        BoatRamp Dashboard\n      </h5>\n      <Filter />\n      <Card className=\"card-container mt-4 ml-3 mx-auto\" variant=\"outlined\">\n        <CardContent>\n          <ConstructionMaterial />\n        </CardContent>  \n      </Card>\n      <BoatRamps />\n    </div> \n  )\n}  \n\nApp.propTypes = {\n  actionHandleGetData: PropTypes.func.isRequired,\n};\n\n// Getting action from redux store for dispatching \nconst mapDispatchAsProps = {\n  actionHandleGetData: handleGetData,\n}\n\nconst hocChain = compose(\n  connect(null, mapDispatchAsProps),\n);\n\nexport { App as TestableApp };\n\nexport default hocChain(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './components/App';\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}